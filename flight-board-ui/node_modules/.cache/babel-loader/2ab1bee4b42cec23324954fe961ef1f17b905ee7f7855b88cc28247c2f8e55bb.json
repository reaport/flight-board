{"ast":null,"code":"import axios from 'axios';\n\n/**\r\n * ��������� ��������� ����� �� �������.\r\n * @param {Object} settings - ��������� ����� (��������, ����� ����������� � ����� �������/������).\r\n * @param {string} type - ��� �����: 'arrival' (�� ������) ��� 'departure' (�� �����).\r\n * @returns {Promise<Object>} - ����� �� �������.\r\n */\nexport const saveFlightSettings = async (settings, type) => {\n  try {\n    const endpoint = type === 'arrival' ? '/api/arrivalflight/create' : '/api/departureflight/create';\n    const response = await axios.post(endpoint, settings);\n    console.log('��������� ���������:', response.data);\n    return response.data; // ���������� ������ �� �������\n  } catch (error) {\n    console.error('������ ��� ���������� ��������:', error);\n    throw error; // ������������ ������ ��� ��������� � ����������\n  }\n};\n\n/**\r\n * �������� ������ ������ � �������.\r\n * @param {string} type - ��� �����: 'arrival' (�� ������) ��� 'departure' (�� �����).\r\n * @returns {Promise<Array>} - ������ ������.\r\n */\nexport const fetchFlights = async type => {\n  try {\n    const endpoint = type === 'arrival' ? '/api/arrivalflight/all' : '/api/departureflight/all';\n    const response = await axios.get(endpoint);\n    console.log('������ ������:', response.data);\n    return response.data; // ���������� ������ �� �������\n  } catch (error) {\n    console.error('������ ��� �������� ������ ������:', error);\n    throw error; // ������������ ������ ��� ��������� � ����������\n  }\n};\n\n/**\r\n * �������� ������ ����������� ������� � �������.\r\n * @returns {Promise<Array>} - ������ ����������� �������.\r\n */\nexport const fetchAllowedCities = async () => {\n  try {\n    const response = await axios.get('/api/city/allowed');\n    return response.data;\n  } catch (error) {\n    console.error('������ ��� �������� ������ �������:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","saveFlightSettings","settings","type","endpoint","response","post","console","log","data","error","fetchFlights","get","fetchAllowedCities"],"sources":["C:/рэу/ррп/табло1_ui/flight-board-ui/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n/**\r\n * ��������� ��������� ����� �� �������.\r\n * @param {Object} settings - ��������� ����� (��������, ����� ����������� � ����� �������/������).\r\n * @param {string} type - ��� �����: 'arrival' (�� ������) ��� 'departure' (�� �����).\r\n * @returns {Promise<Object>} - ����� �� �������.\r\n */\r\nexport const saveFlightSettings = async (settings, type) => {\r\n    try {\r\n        const endpoint = type === 'arrival' ? '/api/arrivalflight/create' : '/api/departureflight/create';\r\n        const response = await axios.post(endpoint, settings);\r\n        console.log('��������� ���������:', response.data);\r\n        return response.data; // ���������� ������ �� �������\r\n    } catch (error) {\r\n        console.error('������ ��� ���������� ��������:', error);\r\n        throw error; // ������������ ������ ��� ��������� � ����������\r\n    }\r\n};\r\n\r\n/**\r\n * �������� ������ ������ � �������.\r\n * @param {string} type - ��� �����: 'arrival' (�� ������) ��� 'departure' (�� �����).\r\n * @returns {Promise<Array>} - ������ ������.\r\n */\r\nexport const fetchFlights = async (type) => {\r\n    try {\r\n        const endpoint = type === 'arrival' ? '/api/arrivalflight/all' : '/api/departureflight/all';\r\n        const response = await axios.get(endpoint);\r\n        console.log('������ ������:', response.data);\r\n        return response.data; // ���������� ������ �� �������\r\n    } catch (error) {\r\n        console.error('������ ��� �������� ������ ������:', error);\r\n        throw error; // ������������ ������ ��� ��������� � ����������\r\n    }\r\n};\r\n\r\n/**\r\n * �������� ������ ����������� ������� � �������.\r\n * @returns {Promise<Array>} - ������ ����������� �������.\r\n */\r\nexport const fetchAllowedCities = async () => {\r\n    try {\r\n        const response = await axios.get('/api/city/allowed');\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('������ ��� �������� ������ �������:', error);\r\n        throw error;\r\n    }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,kBAAkB,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,IAAI,KAAK;EACxD,IAAI;IACA,MAAMC,QAAQ,GAAGD,IAAI,KAAK,SAAS,GAAG,2BAA2B,GAAG,6BAA6B;IACjG,MAAME,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAACF,QAAQ,EAAEF,QAAQ,CAAC;IACrDK,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEH,QAAQ,CAACI,IAAI,CAAC;IAClD,OAAOJ,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZH,OAAO,CAACG,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,MAAMA,KAAK,CAAC,CAAC;EACjB;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,YAAY,GAAG,MAAOR,IAAI,IAAK;EACxC,IAAI;IACA,MAAMC,QAAQ,GAAGD,IAAI,KAAK,SAAS,GAAG,wBAAwB,GAAG,0BAA0B;IAC3F,MAAME,QAAQ,GAAG,MAAML,KAAK,CAACY,GAAG,CAACR,QAAQ,CAAC;IAC1CG,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,QAAQ,CAACI,IAAI,CAAC;IAC5C,OAAOJ,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZH,OAAO,CAACG,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1D,MAAMA,KAAK,CAAC,CAAC;EACjB;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMG,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EAC1C,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAML,KAAK,CAACY,GAAG,CAAC,mBAAmB,CAAC;IACrD,OAAOP,QAAQ,CAACI,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZH,OAAO,CAACG,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;IAC3D,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}