{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0440\\u044D\\u0443\\\\\\u0440\\u0440\\u043F\\\\\\u0442\\u0430\\u0431\\u043B\\u043E1_ui\\\\flight-board-ui\\\\src\\\\components\\\\ArrivalFlightForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { fetchAllowedCities } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArrivalFlightForm = ({\n  onSubmit\n}) => {\n  _s();\n  const [settings, setSettings] = useState({\n    departureCity: '',\n    // Город отправления\n    arrivalTimeOffset: 5 // Время до прилета (минуты)\n  });\n  const [cities, setCities] = useState([]);\n\n  // Загрузка списка городов при монтировании компонента\n  useEffect(() => {\n    const loadCities = async () => {\n      try {\n        const data = await fetchAllowedCities();\n        setCities(data);\n      } catch (error) {\n        console.error('Ошибка при загрузке списка городов:', error);\n      }\n    };\n    loadCities();\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSettings(prev => ({\n      ...prev,\n      [name]: name === 'arrivalTimeOffset' ? parseInt(value, 10) : value // Для числовых полей и строк\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      console.log('Отправка настроек на бэкенд:', settings); // Логируем настройки\n      const response = await axios.post('/api/arrivalflight/create', settings);\n      if (response.data) {\n        alert('Рейс на прилет успешно создан!');\n        onSubmit(); // Обновляем список рейсов\n      } else {\n        alert('Ошибка при создании рейса на прилет.');\n      }\n    } catch (error) {\n      console.error('Ошибка при создании рейса на прилет:', error);\n      alert('Ошибка при создании рейса на прилет.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\u0413\\u043E\\u0440\\u043E\\u0434 \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"departureCity\",\n          value: settings.departureCity,\n          onChange: handleChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: city,\n            children: city\n          }, city, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\u0412\\u0440\\u0435\\u043C\\u044F \\u0434\\u043E \\u043F\\u0440\\u0438\\u043B\\u0435\\u0442\\u0430 (\\u043C\\u0438\\u043D\\u0443\\u0442\\u044B):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"arrivalTimeOffset\",\n          value: settings.arrivalTimeOffset,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0440\\u0435\\u0439\\u0441 \\u043D\\u0430 \\u043F\\u0440\\u0438\\u043B\\u0435\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(ArrivalFlightForm, \"m/hUJGEnldHEcLOvLDDtj91v5eo=\");\n_c = ArrivalFlightForm;\nexport default ArrivalFlightForm;\nvar _c;\n$RefreshReg$(_c, \"ArrivalFlightForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","fetchAllowedCities","jsxDEV","_jsxDEV","ArrivalFlightForm","onSubmit","_s","settings","setSettings","departureCity","arrivalTimeOffset","cities","setCities","loadCities","data","error","console","handleChange","e","name","value","target","prev","parseInt","handleSubmit","preventDefault","log","response","post","alert","children","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","map","city","type","_c","$RefreshReg$"],"sources":["C:/рэу/ррп/табло1_ui/flight-board-ui/src/components/ArrivalFlightForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { fetchAllowedCities } from '../services/api';\r\n\r\nconst ArrivalFlightForm = ({ onSubmit }) => {\r\n    const [settings, setSettings] = useState({\r\n        departureCity: '', // Город отправления\r\n        arrivalTimeOffset: 5, // Время до прилета (минуты)\r\n    });\r\n\r\n    const [cities, setCities] = useState([]);\r\n\r\n    // Загрузка списка городов при монтировании компонента\r\n    useEffect(() => {\r\n        const loadCities = async () => {\r\n            try {\r\n                const data = await fetchAllowedCities();\r\n                setCities(data);\r\n            } catch (error) {\r\n                console.error('Ошибка при загрузке списка городов:', error);\r\n            }\r\n        };\r\n        loadCities();\r\n    }, []);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setSettings((prev) => ({\r\n            ...prev,\r\n            [name]: name === 'arrivalTimeOffset' ? parseInt(value, 10) : value, // Для числовых полей и строк\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            console.log('Отправка настроек на бэкенд:', settings); // Логируем настройки\r\n            const response = await axios.post('/api/arrivalflight/create', settings);\r\n            if (response.data) {\r\n                alert('Рейс на прилет успешно создан!');\r\n                onSubmit(); // Обновляем список рейсов\r\n            } else {\r\n                alert('Ошибка при создании рейса на прилет.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Ошибка при создании рейса на прилет:', error);\r\n            alert('Ошибка при создании рейса на прилет.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <label>\r\n                    Город отправления:\r\n                    <select\r\n                        name=\"departureCity\"\r\n                        value={settings.departureCity}\r\n                        onChange={handleChange}\r\n                        required\r\n                    >\r\n                        <option value=\"\">Выберите город</option>\r\n                        {cities.map((city) => (\r\n                            <option key={city} value={city}>\r\n                                {city}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    Время до прилета (минуты):\r\n                    <input\r\n                        type=\"number\"\r\n                        name=\"arrivalTimeOffset\"\r\n                        value={settings.arrivalTimeOffset}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </label>\r\n            </div>\r\n            <button type=\"submit\">Создать рейс на прилет</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ArrivalFlightForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}